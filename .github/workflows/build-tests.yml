# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build and test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_and_tests:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout of repo
      uses: actions/checkout@v4
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    - name: Install dependancies
      run: npm install
    - name: Install playwright
      run: npm run play
    - name: Run Back-End
      run: npm run startBe &
    - name: Run Front End
      run: npm run startFe &
    - name: Install Playwright Browsers
      run : npx playwright install
    - name: Run UI tests
      run: npm run test-play

  deploy_backend:
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/main'
        needs: build_and_tests
        steps:
          - name: Checkout of repo
            uses: actions/checkout@v4
          - name: Deploy to production
            uses: JorgeLNJunior/render-deploy@v1.4.4
            with:
              service-id: ${{ secrets.BACK_END_API_KEY }}
              api-key: ${{ secrets.RENDER_KEY}}
              clear_cache: true
              wait_deploy: true
              github_token: ${{secrets.GH_TOKEN}}
         
            
  deploy_frondend:
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/main'
        needs: deploy_backend
        steps:
        - name: Checkout of repo
          uses: actions/checkout@v4
        - name: Deploy to production
          uses:  JorgeLNJunior/render-deploy@v1.4.4
          with:
            service-id: ${{ secrets.FROND_END_API_KEY }}
            api-key: ${{ secrets.RENDER_KEY}}
            clear_cache: true
            wait_deploy: true
            github_token: ${{secrets.GH_TOKEN}}
         
